<UserControl x:Class="MinecraftBotManager.CustomControls.SolutionTreeView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:MinecraftBotManager.CustomControls"
             mc:Ignorable="d"
             xmlns:controls="clr-namespace:MinecraftBotManager.CustomControls"
             xmlns:solutions="clr-namespace:MinecraftBotManager.Models.SolutionsModel"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:converters="clr-namespace:MinecraftBotManager.Converters"
             xmlns:filemodels="clr-namespace:MinecraftBotManager.CustomControls.FileProvider"
             xmlns:mat="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:assist="clr-namespace:MinecraftBotManager.Asists"
             d:DesignHeight="450" d:DesignWidth="800">

    <UserControl.Resources>
        <sys:Boolean x:Key="TrueBool">True</sys:Boolean>




        <converters:ValueToTypeConverter x:Key="ValueToType"/>
        <HierarchicalDataTemplate DataType="{x:Type filemodels:DirectoryInfoVM}" ItemsSource="{Binding Items}">
            <Border Background="Transparent" Tag="{Binding RelativeSource={RelativeSource AncestorType=UserControl},Path=DataContext}">
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Stretch">
                    <mat:PackIcon x:Name="Icon" Foreground="#FFD8AC6A" Kind="Folder" Margin="5,0,0,0"/>
                    <controls:EditBox Margin="5,0,0,0" IsInEditMode="{Binding IsInEditMode}" VerticalAlignment="Center" EditText="{Binding Name}"/>
                </StackPanel>
                <Border.ContextMenu>
                    <ContextMenu Padding="0" mat:ThemeAssist.Theme="Dark">
                        <MenuItem Header="Создать">
                            <MenuItem Header="Файл"/>
                            <MenuItem Header="Папку"
                                              Command="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu},Path=PlacementTarget.DataContext.RootSolution.AddFolderCommand}" 
                                              CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu},Path=PlacementTarget.DataContext}">
                                
                            </MenuItem>
                        </MenuItem>
                        <Separator Style="{x:Null}"/>
                        <MenuItem Header="Переименовать"
                                          Command="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu},Path=PlacementTarget.DataContext.RenameCommand}"/>
                        <MenuItem Header="Удалить"
                                          Command="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu},Path=PlacementTarget.DataContext.RootSolution.DeleteCommand}"
                                          CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu},Path=PlacementTarget.DataContext}">
                        </MenuItem>
                        <MenuItem Header="Открыть в проводнике" Command="{Binding OpenExplorerCommand}"
                                          CommandParameter="{Binding FullPath}">

                        </MenuItem>
                    </ContextMenu>
                </Border.ContextMenu>
            </Border>
            <HierarchicalDataTemplate.Triggers>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=TreeViewItem},Path=IsExpanded}" Value="True">
                    <Setter TargetName="Icon" Property="Kind" Value="FolderOpen"/>
                </DataTrigger>
                
                    
            </HierarchicalDataTemplate.Triggers>
        </HierarchicalDataTemplate>


        <DataTemplate DataType="{x:Type filemodels:FileInfoVM}">
            <Border Background="Transparent" Tag="{Binding RelativeSource={RelativeSource AncestorType=UserControl},Path=DataContext}">
                <StackPanel Orientation="Horizontal">
                    <mat:PackIcon Foreground="#FF7CBC78" Kind="LanguageCsharp" Margin="5,0,0,0"/>
                    <controls:EditBox IsInEditMode="{Binding IsInEditMode,Mode=TwoWay}" Margin="5,0,0,0" VerticalAlignment="Center" EditText="{Binding Name,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"/>
                </StackPanel>
                <Border.ContextMenu>
                    <ContextMenu mat:ThemeAssist.Theme="Dark">
                        <MenuItem Header="Редактировать"/>
                        <MenuItem Header="Переименовать"
                                          Command="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu},Path=PlacementTarget.DataContext.RenameCommand}"/>
                        <MenuItem Header="Удалить"
                                          Command="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu},Path=PlacementTarget.DataContext.RootSolution.DeleteCommand}"
                                          CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu},Path=PlacementTarget.DataContext}">
                        </MenuItem>
                        <MenuItem Header="Открыть" Command="{Binding OpenWinCommand}">
                            
                        </MenuItem>
                        <MenuItem Header="Открыть в проводнике" Command="{Binding OpenExplorerCommand}"
                                          CommandParameter="{Binding Info.Directory.FullName}">

                        </MenuItem>
                    </ContextMenu>
                </Border.ContextMenu>
            </Border>
        </DataTemplate>
        <HierarchicalDataTemplate DataType="{x:Type solutions:CSharpSolution}" ItemsSource="{Binding Items}">
            <Border Background="Transparent" Tag="{Binding RelativeSource={RelativeSource AncestorType=UserControl},Path=DataContext}">
                <StackPanel Orientation="Horizontal">
                    <Border Margin="5,0,0,0" BorderBrush="#FF2DE035" BorderThickness="0.6">
                        <mat:PackIcon Foreground="White" Kind="LanguageCsharp" />
                    </Border>
                    <TextBlock Text="Visual C#" VerticalAlignment="Center" Margin="5,0,0,0" Foreground="White" FontSize="14"/>

                </StackPanel>
                <Border.ContextMenu>
                    <ContextMenu Padding="0" mat:ThemeAssist.Theme="Dark">
                        <MenuItem Header="Создать">
                            <MenuItem Header="Файл" Command="{Binding AddNewElementCommand}">

                            </MenuItem>
                            <MenuItem Header="Папку" Command="{Binding AddFolderCommand}" CommandParameter="{Binding}"/>
                        </MenuItem>
                        
                        <MenuItem Header="Свойства">
                        </MenuItem>
                        <MenuItem Header="Открыть в проводнике" Command="{Binding OpenExplorerCommand}"
                                          CommandParameter="{Binding FullPath}">
                            
                        </MenuItem>
                    </ContextMenu>
                </Border.ContextMenu>
            </Border>

        </HierarchicalDataTemplate>
        <HierarchicalDataTemplate DataType="{x:Type filemodels:ReferenceContainer}" ItemsSource="{Binding Items}">
            <Border Background="Transparent" Tag="{Binding RelativeSource={RelativeSource AncestorType=UserControl},Path=DataContext}">
                <StackPanel Orientation="Horizontal">
                    <mat:PackIcon Margin="5,0,0,0" Foreground="White" Kind="Abacus" />
                    <TextBlock Text="Ссылки" Margin="5,0,0,0" FontSize="14" FontFamily="JetBrains Mono"  Foreground="White" VerticalAlignment="Center"/>
                </StackPanel>
                <Border.ContextMenu>
                    <ContextMenu mat:ThemeAssist.Theme="Dark">
                        <MenuItem Header="Добавить ссылку">

                        </MenuItem>
                        <Separator/>
                    </ContextMenu>
                </Border.ContextMenu>
            </Border>
        </HierarchicalDataTemplate>


        <Style TargetType="{x:Type TreeView}" BasedOn="{x:Null}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TreeView}">
                        <Border>
                            <ScrollViewer>
                                <ItemsPresenter/>
                            </ScrollViewer>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type TreeViewItem}" x:Key="SolutionTreeItem">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TreeViewItem}">
                        <Grid x:Name="RootPanel">

                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <Grid x:Name="HeaderPanel" Background="Transparent">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <ToggleButton VerticalAlignment="Center" Foreground="White" ClickMode="Press" Background="Transparent" x:Name="Expander" IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent},Path=IsExpanded}">
                                    <ToggleButton.Style>

                                        <Style TargetType="ToggleButton">
                                            <Setter Property="Foreground" Value="White"/>
                                            <Setter Property="Background" Value="White"/>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                        <Border VerticalAlignment="Center" Padding="5,1" Background="Transparent">
                                                            <Viewbox>
                                                                <Grid MinWidth="12">
                                                                    <Polygon x:Name="CloseExpand" Visibility="Collapsed" Fill="{TemplateBinding Background}" Stroke="{TemplateBinding Foreground}" Points="0,0 6,5, 0,10">

                                                                    </Polygon>
                                                                    <Polygon x:Name="OpenExpand" Fill="{TemplateBinding Background}" Stroke="{TemplateBinding Foreground}" Points="0,6 6,0, 6,6">

                                                                    </Polygon>
                                                                </Grid>
                                                            </Viewbox>
                                                        </Border>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="IsChecked" Value="True">
                                                                <Setter Property="Visibility" Value="Visible" TargetName="OpenExpand"/>
                                                                <Setter Property="Visibility" Value="Collapsed" TargetName="CloseExpand"/>
                                                            </Trigger>
                                                            <Trigger Property="IsChecked" Value="False">
                                                                <Setter Property="Visibility" Value="Collapsed" TargetName="OpenExpand"/>
                                                                <Setter Property="Visibility" Value="Visible" TargetName="CloseExpand"/>
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </ToggleButton.Style>
                                </ToggleButton>
                                <Border Grid.Column="1" Grid.ColumnSpan="2">
                                    <ContentPresenter ContentSource="Header"/>
                                </Border>
                            </Grid>

                            <ItemsPresenter x:Name="ItemsHost" Visibility="Collapsed" Grid.Row="1"/>

                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasItems" Value="False">
                                <Setter Property="Visibility" Value="Hidden" TargetName="Expander"/>
                                <Setter TargetName="ItemsHost" Property="Margin" Value="10,0,0,0"/>
                            </Trigger>
                            <Trigger Property="HasItems" Value="True">
                                <Setter TargetName="ItemsHost" Property="Margin" Value="10,0,0,0"/>
                            </Trigger>
                            <Trigger SourceName="Expander" Property="IsChecked" Value="True">
                                <Setter TargetName="ItemsHost" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="Expander" Property="Background" Value="White"/>
                            </Trigger>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Background" TargetName="HeaderPanel">
                                    <Setter.Value>
                                        <SolidColorBrush Color="#FF007ACC" Opacity="0.6"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsChecked" SourceName="Expander" Value="False"/>
                                    <Condition Property="IsMouseOver" SourceName="Expander" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Foreground" TargetName="Expander">
                                    <Setter.Value>
                                        <SolidColorBrush Color="#FF0F62D8" />
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Background"  TargetName="Expander">
                                    <Setter.Value>
                                        <SolidColorBrush Color="Transparent" />
                                    </Setter.Value>
                                </Setter>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsChecked" SourceName="Expander" Value="True"/>
                                    <Condition Property="IsMouseOver" SourceName="Expander" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Foreground" TargetName="Expander">
                                    <Setter.Value>
                                        <SolidColorBrush Color="#FF0F62D8" />
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Background"  TargetName="Expander">
                                    <Setter.Value>
                                        <SolidColorBrush Color="#FF0F62D8" />
                                    </Setter.Value>
                                </Setter>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="True"/>
                                    <Condition Property="IsMouseOver" SourceName="Expander" Value="True"/>
                                    <Condition Property="IsChecked" SourceName="Expander" Value="False"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Foreground" Value="White" TargetName="Expander"/>
                                <Setter Property="Background" Value="White" TargetName="Expander"/>
                            </MultiTrigger>

                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="True"/>
                                    <Condition Property="IsMouseOver" SourceName="Expander" Value="True"/>
                                    <Condition Property="IsChecked" SourceName="Expander" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Foreground" Value="White" TargetName="Expander"/>
                                <Setter Property="Background" Value="Transparent" TargetName="Expander"/>
                            </MultiTrigger>



                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
    <TreeView PreviewMouseWheel="TreeViewFiles_PreviewMouseWheel" PreviewMouseRightButtonDown="TreeViewFiles_MouseDown" x:Name="TreeViewFiles" Margin="5,0" Foreground="White" ItemsSource="{Binding Solutions}">
        <TreeView.Resources>
            <Style TargetType="{x:Type TextBlock}">
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="FontFamily" Value="JetBrains Mono"/>
            </Style>
            
        </TreeView.Resources>
        <TreeView.ItemContainerStyle>
            <Style TargetType="{x:Type TreeViewItem}" BasedOn="{StaticResource SolutionTreeItem}">
                <Setter Property="IsExpanded" Value="{Binding IsExpanded,Mode=TwoWay}"/>
                <EventSetter Event="PreviewMouseLeftButtonDown" Handler="TreeViewFiles_PreviewMouseLeftButtonDown"/>
            </Style>
            
        </TreeView.ItemContainerStyle>

    </TreeView>
</UserControl>
