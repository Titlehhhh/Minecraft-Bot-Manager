<UserControl x:Class="MinecraftBotManager.Views.UserControls.ControlCenter"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"             
             xmlns:assist="clr-namespace:MinecraftBotManager.Asists"            
             xmlns:proxy="clr-namespace:Starksoft.Net.Proxy;assembly=StarkSoftProxy"
             xmlns:services="clr-namespace:MinecraftBotManager.Services"
             xmlns:custom="clr-namespace:MinecraftBotManager.CustomControls"
             xmlns:ext="https://spiegelp.github.io/MaterialDesignExtensions/winfx/xaml"             
             xmlns:root="clr-namespace:MinecraftBotManager"             
             xmlns:xceed="http://schemas.xceed.com/wpf/xaml/toolkit"
             xmlns:converters="clr-namespace:MinecraftBotManager.Converters"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:bhs="clr-namespace:MinecraftBotManager.Behaviors"
             xmlns:mat="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:models="clr-namespace:MinecraftBotManager.Models"
             xmlns:vms="clr-namespace:MinecraftBotManager.ViewModel"
             
             xmlns:local="clr-namespace:MinecraftBotManager.Views.UserControls"             
             
             mc:Ignorable="d"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
              d:DesignWidth="800"
             d:DesignHeight="1000"
             d:DataContext="{Binding Source={StaticResource desig}}"
             x:Name="test">

    <UserControl.Resources>
        <Popup x:Key="PopupTextBox" AllowsTransparency="True" x:Name="PART_Popup" Placement="Top" >
            <Border CornerRadius="3" Padding="3" BorderThickness="1" BorderBrush="Gray">
                <Border.Background>
                    <SolidColorBrush Color="Black" Opacity="0.5"/>
                </Border.Background>
                <ListBox mat:ThemeAssist.Theme="Dark" ItemsSource="{Binding Source={StaticResource Locator},Path=ModulesService.Commands}">
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Name}"/>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                    <ListBox.ItemContainerStyle>
                        <Style TargetType="{x:Type ListBoxItem}">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                        <Border x:Name="rootborder" Background="Transparent">
                                            <ContentPresenter/>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsSelected" Value="True">
                                                <Setter Property="Background" TargetName="rootborder">
                                                    <Setter.Value>
                                                        <SolidColorBrush Color="Aqua" Opacity="0.5"/>
                                                    </Setter.Value>
                                                </Setter>
                                            </Trigger>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Background" TargetName="rootborder">
                                                    <Setter.Value>
                                                        <SolidColorBrush Color="DarkGray" Opacity="0.5"/>
                                                    </Setter.Value>
                                                </Setter>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ListBox.ItemContainerStyle>
                </ListBox>
            </Border>
        </Popup>
        <converters:AttributeConverter x:Key="AttributeConvert"/>
        <converters:BooleanToString x:Key="BoolToEnabled"/>
        <services:DesignControlCenterVM x:Key="desig"/>
        <ObjectDataProvider x:Key="ProxyEnums" MethodName="GetValues" ObjectType="{x:Type sys:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="proxy:ProxyType"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <DataTemplate x:Key="ChatBot">
            <xceed:PropertyGrid SelectedObject="{Binding}"/>

        </DataTemplate>
        <DataTemplate DataType="{x:Type vms:BotObjectVM}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <Border>
                    <Border.Background>
                        <SolidColorBrush Color="#FFFCFDFB" Opacity="0.2"/>
                    </Border.Background>
                    <StackPanel>
                        <TextBox Text="{Binding Nickname,UpdateSourceTrigger=PropertyChanged}" mat:HintAssist.Hint="Укажите ник" MinWidth="100" MaxWidth="{Binding ElementName=Root,Path=ActualWidth}" TextAlignment="Center" Foreground="White" FontSize="18" HorizontalAlignment="Center">
                            <TextBox.Style>
                                <Style TargetType="TextBox" BasedOn="{StaticResource MaterialDesignTextBox}">
                                    <Setter Property="IsEnabled" Value="False"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding StatusLaunched}" Value="None">
                                            <Setter Property="IsEnabled" Value="True"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBox.Style>
                        </TextBox>
                        <DockPanel LastChildFill="False">
                            <StackPanel Orientation="Horizontal">
                                <Button Margin="5" HorizontalAlignment="Left" Command="{Binding StartCommand}" OverridesDefaultStyle="True">
                                    <Button.Style>
                                        <Style TargetType="Button" BasedOn="{StaticResource MaterialDesignFloatingActionMiniButton}">
                                            <Setter Property="Background" Value="Transparent"/>
                                            <Setter Property="BorderBrush" Value="Green"/>
                                            <Setter Property="BorderThickness" Value="1"/>

                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding StatusLaunched,Mode=OneWay}" Value="None">
                                                    <Setter Property="Content">
                                                        <Setter.Value>
                                                            <mat:PackIcon Kind="PlayArrow" HorizontalAlignment="Center" Height="Auto" Width="Auto" VerticalAlignment="Center"/>
                                                        </Setter.Value>
                                                    </Setter>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding StatusLaunched,Mode=OneWay}" Value="Initialization">
                                                    <Setter Property="Content">
                                                        <Setter.Value>
                                                            <ProgressBar IsIndeterminate="True" Style="{StaticResource MaterialDesignCircularProgressBar}" Foreground="Turquoise"/>
                                                        </Setter.Value>
                                                    </Setter>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding StatusLaunched,Mode=OneWay}" Value="Launched">
                                                    <Setter Property="Content">
                                                        <Setter.Value>
                                                            <mat:PackIcon Kind="Pause" HorizontalAlignment="Center" Height="Auto" Width="Auto" VerticalAlignment="Center"/>
                                                        </Setter.Value>
                                                    </Setter>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Button.Style>
                                </Button >
                                <Button Margin="5" Command="{Binding RestartCommand}">
                                    <Button.Style>
                                        <Style TargetType="Button" BasedOn="{StaticResource MaterialDesignFloatingActionMiniButton}">
                                            <Setter Property="Background" Value="Transparent"/>
                                            <Setter Property="BorderBrush" Value="#FFFFA200"/>
                                            <Setter Property="BorderThickness" Value="1"/>


                                        </Style>
                                    </Button.Style>
                                    <Button.Content>
                                        <mat:PackIcon Height="Auto" Margin="1" Width="Auto" Kind="Restart"/>
                                    </Button.Content>
                                </Button>
                                <TextBlock Text="{Binding ErrorStart}" VerticalAlignment="Center" Margin="10,0,0,0" Foreground="Red" FontSize="15"/>
                            </StackPanel>

                            <Button DockPanel.Dock="Right" Click="Button_Click"  CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type ContentControl}},Path=DataContext.MainModel}" Command="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}},Path=DataContext.DeleteCommand}" Padding="0" Background="Transparent" BorderThickness="0">
                                <mat:PackIcon Kind="Delete"  Margin="0,0,0,0" Height="20" Width="20"/>
                            </Button>
                        </DockPanel>
                    </StackPanel>
                </Border>
                <ScrollViewer mat:ThemeAssist.Theme="Dark" Grid.Row="1" VerticalScrollBarVisibility="Visible" Margin="0,0,0,10" x:Name="Root" Foreground="#FF0A85EC">
                    <Border Padding="10,5,0,0">

                        <StackPanel>
                            <TextBlock Text="Настройки:" Foreground="White" FontSize="17" FontWeight="Bold"/>
                            <Grid x:Name="StaticData" HorizontalAlignment="Left" >
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*" MinWidth="150"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <Grid.Style>
                                    <Style TargetType="Grid">
                                        <Setter Property="IsEnabled" Value="False"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding StatusLaunched}" Value="None">
                                                <Setter Property="IsEnabled" Value="True"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Grid.Style>
                                <Grid.Resources>
                                    <Style TargetType="{x:Type TextBlock}">
                                        <Setter Property="Foreground" Value="White"/>
                                        <Setter Property="FontSize" Value="15"/>
                                        <Setter Property="FontFamily" Value="JetBrains Mono"/>
                                        <Setter Property="VerticalAlignment" Value="Center"/>
                                        <Setter Property="Margin" Value="3,2"/>
                                    </Style>
                                    <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource MaterialDesignComboBoxEditableTextBox}">
                                        <Setter Property="Foreground" Value="White"/>
                                        <Setter Property="FontSize" Value="15"/>
                                        <Setter Property="Margin" Value="3,2"/>
                                        <Setter Property="VerticalAlignment" Value="Center"/>
                                        <Setter Property="CaretBrush" Value="White"/>
                                        <Setter Property="HorizontalAlignment" Value="Stretch"/>
                                        <Setter Property="Padding" Value="0,2"/>

                                    </Style>
                                </Grid.Resources>
                                <TextBlock Grid.Column="0" Grid.Row="0" Text="Хост"/>
                                <TextBox  Grid.Column="1"  Grid.Row="0" Text="{Binding Host,UpdateSourceTrigger=PropertyChanged}"/>
                                <TextBlock Text="Порт" Grid.Row="1"/>
                                <TextBox Grid.Column="1" Grid.Row="1" Text="{Binding Port,UpdateSourceTrigger=PropertyChanged}" DataObject.Pasting="TextBox_Pasting" PreviewTextInput="TextBox_PreviewTextInput"/>
                                <TextBlock Text="Прокси хост" Grid.Row="2"/>
                                <TextBox Grid.Column="1" Grid.Row="2" Text="{Binding ProxyHost,UpdateSourceTrigger=PropertyChanged}"/>
                                <TextBlock Text="Прокси порт" Grid.Row="3"/>
                                <TextBox Grid.Column="1" Grid.Row="3" Text="{Binding ProxyPort,UpdateSourceTrigger=PropertyChanged}" DataObject.Pasting="TextBox_Pasting" PreviewTextInput="TextBox_PreviewTextInput"/>
                                <TextBlock Text="Прокси тип" Grid.Row="4"/>
                                <ComboBox Grid.Column="1" HorizontalAlignment="Left" Grid.Row="4" Margin="3,2" Style="{StaticResource MaterialDesignComboBox}" mat:ThemeAssist.Theme="Dark" SelectedItem="{Binding ProxyType,UpdateSourceTrigger=PropertyChanged}" ItemsSource="{Binding Source={StaticResource ProxyEnums}}">

                                </ComboBox>
                                <TextBlock Text="Версия игры" Grid.Row="5"/>
                                <TextBox Grid.Column="1" MinWidth="150" Grid.Row="5" Text="{Binding Version,UpdateSourceTrigger=PropertyChanged}"/>
                            </Grid>
                            <TextBlock  Text="Игровые данные:" Foreground="White" FontSize="17" FontWeight="Bold"/>
                            <Grid >
                                <Grid.Resources>
                                    <Style TargetType="{x:Type TextBlock}">
                                        <Setter Property="Foreground" Value="White"/>
                                        <Setter Property="FontSize" Value="15"/>
                                        <Setter Property="Margin" Value="3,2"/>
                                    </Style>
                                </Grid.Resources>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <StackPanel>
                                    <TextBlock Text="UUID"/>
                                    <TextBlock Text="Позиция"/>
                                    <TextBlock Text="Здоровье"/>
                                    <TextBlock Text="Yaw"/>
                                    <TextBlock Text="Pitch"/>
                                </StackPanel>
                                <StackPanel HorizontalAlignment="Left" Grid.Column="1">
                                    <TextBlock Text="{Binding UUID}"/>
                                    <TextBlock Text="{Binding Position}"/>
                                    <TextBlock Text="{Binding Health}"/>
                                    <TextBlock Text="{Binding Yaw}"/>
                                    <TextBlock Text="{Binding Pitch}"/>
                                </StackPanel>
                            </Grid>

                            <Expander Margin="0,10,5,10" Foreground="White" Header="Модули" Style="{StaticResource MaterialDesignExpander}">
                                <Expander.Background>
                                    <SolidColorBrush Color="Black" Opacity="0.5"/>
                                </Expander.Background>
                                <Grid Margin="0,5">
                                    <Grid.Resources>
                                        <Style TargetType="{x:Type GridViewColumnHeader}" BasedOn="{StaticResource {x:Type GridViewColumnHeader}}">
                                            <Setter Property="Foreground" Value="White"/>
                                            <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                            <Setter Property="VerticalContentAlignment" Value="Center"/>
                                            <Setter Property="Padding" Value="3,2"/>
                                            <Setter Property="Margin" Value="0"/>
                                        </Style>
                                    </Grid.Resources>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>
                                    <StackPanel Orientation="Horizontal">
                                        <Button Height="Auto" Padding="0" Command="{Binding AddModuleCommand}" Width="Auto" HorizontalAlignment="Left" Grid.Row="0" BorderThickness="0" Background="Transparent">
                                            <Button.Content>
                                                <mat:PackIcon Height="Auto" Width="25" Kind="Add"/>
                                            </Button.Content>
                                        </Button>
                                        <Button Height="Auto" Command="{Binding DeleteModuleCommand}" CommandParameter="{Binding ElementName=ModulesList,Path=SelectedItem}" Padding="0" Width="Auto" HorizontalAlignment="Left" Grid.Row="0" BorderThickness="0" Background="Transparent">
                                            <Button.Content>
                                                <mat:PackIcon Height="Auto" Width="25" Kind="Minus"/>
                                            </Button.Content>
                                        </Button>
                                    </StackPanel>
                                    <Rectangle Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" Height="0.2" Fill="White" HorizontalAlignment="Stretch"/>
                                    <ListView x:Name="ModulesList" Grid.Row="2" ItemsSource="{Binding Modules}" Grid.Column="0">

                                        <ListView.View>
                                            <GridView>
                                                <GridView.Columns>
                                                    <GridViewColumn DisplayMemberBinding="{Binding Converter={StaticResource AttributeConvert},ConverterParameter='name'}" Header="Название"/>

                                                </GridView.Columns>
                                            </GridView>
                                        </ListView.View>
                                    </ListView>
                                    <GridSplitter Grid.Column="1" VerticalAlignment="Stretch" Grid.RowSpan="3" Width="3" ResizeBehavior="PreviousAndNext"/>

                                </Grid>

                            </Expander>
                            <Expander Header="Список игроков" Foreground="White" Margin="0,10,5,10">
                                <Expander.Background>
                                    <SolidColorBrush Color="Black" Opacity="0.5"/>
                                </Expander.Background>

                            </Expander>
                            <Expander Header="Сущности" Foreground="White" Margin="0,10,5,10">
                                <Expander.Background>
                                    <SolidColorBrush Color="Black" Opacity="0.5"/>
                                </Expander.Background>

                            </Expander>

                            <Expander Margin="0,10,5,10" Foreground="White" Header="Чат">
                                <Expander.Background>
                                    <SolidColorBrush Color="Black" Opacity="0.5"/>
                                </Expander.Background>
                                <Grid>
                                    <StackPanel>
                                        <Border CornerRadius="5">
                                            <custom:ChatControl ChatQueue="{Binding ChatQueue}"/>
                                        </Border>
                                        <Border Margin="0,15,0,10">


                                            <TextBox x:Name="ChatTextbox" VerticalAlignment="Center" Margin="5"  Text="{Binding Message,UpdateSourceTrigger=PropertyChanged}" Foreground="White"  FontSize="14" CaretBrush="White">
                                                <TextBox.InputBindings>
                                                    <KeyBinding Key="Enter" Command="{Binding SendCommand}"/>
                                                </TextBox.InputBindings>
                                                <i:Interaction.Behaviors>
                                                    <bhs:TextBoxIntelli Popup="{Binding Source={StaticResource PopupTextBox}}"/>
                                                </i:Interaction.Behaviors>
                                            </TextBox>

                                        </Border>
                                    </StackPanel>

                                </Grid>
                            </Expander>
                            <Expander Header="Окно" Foreground="White" Margin="0,10,5,10">
                                <Expander.Background>
                                    <SolidColorBrush Color="Black" Opacity="0.5"/>
                                </Expander.Background>

                            </Expander>
                        </StackPanel>
                    </Border>

                </ScrollViewer>
            </Grid>
        </DataTemplate>

    </UserControl.Resources>
    <Border CornerRadius="0">
        <Border.Background>
            <SolidColorBrush Color="Black" Opacity="0.4"/>
        </Border.Background>
        <Grid Margin="0">
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Border Grid.Row="1" Padding="5" BorderThickness="0,0.5,0,0">
                <Border.Background>
                    <LinearGradientBrush EndPoint="1,1" StartPoint="0,0" Opacity="0.4">
                        <GradientStop Color="#FF060606" Offset="1"/>
                        <GradientStop Color="#FF636363"/>
                    </LinearGradientBrush>
                </Border.Background>
                <Border.BorderBrush>
                    <SolidColorBrush Color="White" Opacity="0.3"/>
                </Border.BorderBrush>
                <StackPanel Orientation="Horizontal">
                    <Button ToolTip="Добавить" Click="Button_Click" Style="{StaticResource MaterialDesignFloatingActionMiniButton}" Command="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}},Path=DataContext.AddNewBotCommand}" Height="Auto" Width="Auto" HorizontalAlignment="Right" VerticalAlignment="Bottom" Background="Transparent" BorderBrush="#FF67B73A">
                        <mat:PackIcon Margin="10" Kind="AccountAdd" Height="20" Width="20"/>

                    </Button>
                    <Button ToolTip="Запустить всех" Margin="10,0,0,0" Style="{StaticResource MaterialDesignFloatingActionMiniButton}" Command="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}},Path=DataContext.StartAllBotCommand}" Height="Auto" Width="Auto" HorizontalAlignment="Right" VerticalAlignment="Bottom" Background="Transparent" BorderBrush="#FF74FF00">
                        <mat:PackIcon Margin="10" Kind="PlayArrow" Height="20" Width="20"/>
                    </Button>
                    <Button ToolTip="Перезапустить все" Margin="10,0,0,0" Style="{StaticResource MaterialDesignFloatingActionMiniButton}" Command="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}},Path=DataContext.RestartAllBotCommand}" Height="Auto" Width="Auto" HorizontalAlignment="Right" VerticalAlignment="Bottom" Background="Transparent" BorderBrush="#FFE2AD1F">
                        <mat:PackIcon Margin="10" Kind="Reload" Height="20" Width="20"/>
                    </Button>
                    <Button ToolTip="Отключить все" Margin="10,0,0,0" Style="{StaticResource MaterialDesignFloatingActionMiniButton}" Command="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}},Path=DataContext.DisconnectAllBotCommand}" Height="Auto" Width="Auto" HorizontalAlignment="Right" VerticalAlignment="Bottom" Background="Transparent" BorderBrush="#FF9C3834">
                        <mat:PackIcon Margin="10" Kind="LanDisconnect" Height="20" Width="20"/>
                    </Button>
                </StackPanel>
            </Border>
            <!--  ItemsSource="{Binding MainModel.BotViewModels}"  -->
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <ListBox SelectedIndex="0" x:Name="Listbots" Grid.Column="2" ItemsSource="{Binding Bots}">
                    
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <TextBlock x:Name="NickTB" Foreground="White" Text="{Binding Nickname}" FontSize="15" FontFamily="JetBrains Mono">

                            </TextBlock>
                            <DataTemplate.Triggers>
                                <DataTrigger Binding="{Binding Nickname}" Value="">
                                    <Setter TargetName="NickTB" Property="Text" Value="Новый бот"/>
                                </DataTrigger>
                            </DataTemplate.Triggers>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
                <GridSplitter Foreground="White" mat:ThemeAssist.Theme="Dark" Width="3" Grid.Column="1" VerticalAlignment="Stretch" ResizeBehavior="PreviousAndNext" ResizeDirection="Columns"/>
                <ContentPresenter Grid.Column="0" Content="{Binding ElementName=Listbots,Path=SelectedItem}"/>
            </Grid>

        </Grid>
    </Border>
</UserControl>
