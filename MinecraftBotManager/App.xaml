<Application x:Class="MinecraftBotManager.App" xmlns:mat="http://materialdesigninxaml.net/winfx/xaml/themes"  xmlns:converters="clr-namespace:MinecraftBotManager.Converters"  xmlns:usercontrols="clr-namespace:MinecraftBotManager.Views.UserControls"  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:local="clr-namespace:MinecraftBotManager" StartupUri="Views/Windows/MainWindow.xaml" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" d1p1:Ignorable="d" xmlns:vm="clr-namespace:MinecraftBotManager.ViewModel" xmlns:d1p1="http://schemas.openxmlformats.org/markup-compatibility/2006">
    <Application.Resources>
        <ResourceDictionary>
            <vm:ViewModelLocator x:Key="Locator" d:IsDataSource="True"/>
            <DataTemplate DataType="{x:Type vm:ControlCenterVM}">
                <usercontrols:ControlCenter/>
            </DataTemplate>
            <DataTemplate DataType="{x:Type vm:SettingsVM}">
                <usercontrols:SettingsView/>
            </DataTemplate>
            <vm:SettingsVM x:Key="DataContextDesign"/>
            <SolidColorBrush x:Key="BackgroundMenu" Color="#FF131313"/>
            <SolidColorBrush x:Key="SelectionBrush" Color = "#FF007ACC" Opacity = "0.25" />
            <Style TargetType="{x:Type TextBlock}">
                <Setter Property="FontFamily" Value="Roboto"/>
            </Style>
            <Style TargetType="{x:Type MenuBase}">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="UseLayoutRounding" Value="True"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type MenuBase}">
                            <Border Background="{TemplateBinding Background}"
                                     SnapsToDevicePixels="True">
                                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style TargetType="{x:Type MenuItem}" BasedOn="{x:Null}">
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="OverridesDefaultStyle" Value="True"/>

                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type MenuItem}">
                            <Grid ClipToBounds="True"
                                  SnapsToDevicePixels="True">

                                <Border x:Name="BorderBackground">
                                    <Border.Style>
                                        <Style TargetType="Border">
                                            <Setter Property="Background" Value="Transparent"/>
                                            <Style.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Background">
                                                        <Setter.Value>
                                                            <SolidColorBrush Color="DarkGray" Opacity="0.3"/>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Border.Style>
                                    <Grid Width="Auto" VerticalAlignment="Center">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" SharedSizeGroup="Icon"/>
                                            <ColumnDefinition Width="*" SharedSizeGroup="Header"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition/>
                                        </Grid.ColumnDefinitions>
                                        <Grid x:Name="IconWrapper">
                                            <ContentPresenter x:Name="HeaderPresenter" Content="{TemplateBinding Icon}"
                                                            Height="16"
                                                            SnapsToDevicePixels="True"
                                                            Width="16"
                                                            HorizontalAlignment="Left"
                                                            VerticalAlignment="Center"
                                                            RecognizesAccessKey="True"
                                                            ContentSource="Header">

                                            </ContentPresenter>
                                        </Grid>
                                        <Grid Grid.Column="1">
                                            <ContentPresenter x:Name="HeaderContent" Content="{TemplateBinding Header}"
                                                                VerticalAlignment="Center"
                                                                ContentTemplate="{TemplateBinding HeaderTemplate}"/>
                                        </Grid>
                                        <Grid Grid.Column="2" HorizontalAlignment="Right">
                                            <mat:PackIcon x:Name="ArrowOpen" HorizontalAlignment="Right" Height="Auto" Width="16" Visibility="Collapsed" Foreground="#FF494949" Kind="PlayArrow"/>
                                        </Grid>
                                    </Grid>
                                </Border>
                                <Popup x:Name="PART_Popup"                                                                     
                                        Placement="Bottom"
                                        AllowsTransparency="True"
                                   
                                        IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}">
                                    <mat:Card x:Name="SubMenuBorder" Background="{StaticResource BackgroundMenu}"
                                             BorderBrush="#FF4F4F4F"
                                          BorderThickness="0.9"
                                             Padding="2">

                                        <ItemsPresenter x:Name="ItemsPresenter"
                                                             Grid.IsSharedSizeScope="True"
                                                    
                                                            />

                                    </mat:Card>

                                </Popup>
                            </Grid>


                            <ControlTemplate.Triggers>
                                <Trigger Property="Role" Value="SubmenuHeader">
                                    <Setter TargetName="PART_Popup" Property="Placement" Value="Right"/>

                                    <Setter TargetName="HeaderContent" Property="Margin" Value="16 0"/>

                                    <Setter TargetName="ArrowOpen" Property="Visibility" Value="Visible"/>
                                    <Setter Property="Grid.IsSharedSizeScope" Value="True"/>

                                </Trigger>

                                <Trigger Property="Role" Value="TopLevelHeader">
                                    <Setter Property="Grid.IsSharedSizeScope" Value="True"/>

                                    <Setter TargetName="HeaderContent" Property="Margin" Value="16 1"/>

                                </Trigger>

                                <Trigger Property="Role" Value="SubmenuItem">
                                    <Setter Property="Grid.IsSharedSizeScope" Value="True"/>

                                    <Setter TargetName="HeaderContent" Property="Margin" Value="16 0"/>

                                </Trigger>






                                <Trigger Property="Icon" Value="{x:Null}">
                                    <Setter Property="Visibility" Value="Collapsed" TargetName="IconWrapper"/>
                                </Trigger>





                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsSubmenuOpen" Value="True"/>
                                        <Condition Property="Role" Value="TopLevelHeader"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Background" TargetName="BorderBackground" >
                                        <Setter.Value>
                                            <SolidColorBrush Color="#FF131313"/>
                                        </Setter.Value>
                                    </Setter>
                                </MultiTrigger>







                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsHighlighted" Value="True"/>
                                        <Condition Property="Role" Value="SubmenuHeader"/>
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="ArrowOpen" Property="Foreground">
                                        <Setter.Value>
                                            <SolidColorBrush Color="#FF0E4CEE"/>
                                        </Setter.Value>
                                    </Setter>
                                </MultiTrigger>


                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <converters:NameAttributeConverter x:Key="NameConverter"/>
            <converters:AttributeConverter x:Key="ConverterAttribute"/>
            <converters:BooleanToString x:Key="BoolToEnabled"/>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Light.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Dark.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Primary/MaterialDesignColor.DeepPurple.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Accent/MaterialDesignColor.Lime.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignExtensions;component/Themes/Generic.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignExtensions;component/Themes/MaterialDesignLightTheme.xaml" />
                
                <ResourceDictionary Source="Resources/WindowStyle.xaml" />
                
            </ResourceDictionary.MergedDictionaries>
            
        </ResourceDictionary>
        
    </Application.Resources>
</Application>