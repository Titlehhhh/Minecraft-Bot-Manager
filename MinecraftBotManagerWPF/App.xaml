<Application x:Class="MinecraftBotManagerWPF.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             d1p1:Ignorable="d"
             xmlns:mat="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:d1p1="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:vms="clr-namespace:MinecraftBotManagerWPF.ViewModels"
             xmlns:local="clr-namespace:MinecraftBotManagerWPF">
    <Application.Resources>
        <ResourceDictionary>
            <vms:ViewModelLocator x:Key="Locator" d:IsDataSource="True"/>
            <SolidColorBrush Color="#191919" x:Key="CommonColor"/>
            <Style TargetType="{x:Type ProgressBar}">
                <Setter Property="Foreground" Value="{DynamicResource PrimaryHueDarkBrush}"/>
                <Setter Property="Background" Value="{DynamicResource PrimaryHueLightBrush}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource PrimaryHueLightBrush}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Height" Value="2"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ProgressBar}">
                            <Grid x:Name="TemplateRoot" RenderTransformOrigin="0,0.5">
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Determinate"/>
                                        <VisualState x:Name="Indeterminate">
                                            <Storyboard RepeatBehavior="Forever">
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="Animation">
                                                    <EasingDoubleKeyFrame KeyTime="0" Value="0.05"/>
                                                    <EasingDoubleKeyFrame KeyTime="0:0:1.5" Value="0.05"/>
                                                    <EasingDoubleKeyFrame KeyTime="0:0:3" Value="0.05"/>
                                                </DoubleAnimationUsingKeyFrames>
                                                <PointAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransformOrigin)" Storyboard.TargetName="Animation">
                                                    <EasingPointKeyFrame KeyTime="0" Value="-0.5,0.5"/>
                                                    <EasingPointKeyFrame KeyTime="0:0:1.5" Value="0.5,0.5"/>
                                                    <EasingPointKeyFrame KeyTime="0:0:3" Value="1.5,0.5"/>
                                                </PointAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"/>
                                <Rectangle x:Name="PART_Track"/>
                                <Grid x:Name="PART_Indicator" ClipToBounds="true" HorizontalAlignment="Left">
                                    <Rectangle x:Name="Indicator" Fill="{TemplateBinding Foreground}"/>
                                    <Rectangle x:Name="Animation" Fill="{TemplateBinding Foreground}" RenderTransformOrigin="0.5,0.5">
                                        <Rectangle.RenderTransform>
                                            <TransformGroup>
                                                <ScaleTransform/>
                                                <SkewTransform/>
                                                <RotateTransform/>
                                                <TranslateTransform/>
                                            </TransformGroup>
                                        </Rectangle.RenderTransform>
                                    </Rectangle>
                                </Grid>
                            </Grid>
                            <ControlTemplate.Triggers>

                                <Trigger Property="IsIndeterminate" Value="true">
                                    <Setter Property="Visibility" TargetName="Indicator" Value="Collapsed"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="CustomWindowStyle" TargetType="{x:Type Window}">
                <Setter Property="WindowChrome.WindowChrome">
                    <Setter.Value>
                        <WindowChrome  CaptionHeight="40"
                              CornerRadius="0"
                              GlassFrameThickness="0"
                              NonClientFrameEdges="None"
                              ResizeBorderThickness="5"
                              UseAeroCaptionButtons="True"
                                      />
                    </Setter.Value>
                </Setter>
                <Setter Property="ClipToBounds" Value="False"/>
                <Setter Property="BorderBrush" Value="Black" />
                <Setter Property="Background" Value="Gray" />

                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Window}">
                            <Border Padding="{TemplateBinding Margin}" ClipToBounds="False" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
                                <AdornerDecorator>
                                    <ContentPresenter/>
                                </AdornerDecorator>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="WindowState" Value="Maximized">
                                    <Setter Property="BorderBrush" Value="Black"/>
                                    <Setter Property="BorderThickness" Value="3"/>
                                    <Setter Property="WindowChrome.WindowChrome">
                                        <Setter.Value>
                                            <WindowChrome CaptionHeight="40"
                              CornerRadius="0"
                              GlassFrameThickness="0"
                              NonClientFrameEdges="None"
                              ResizeBorderThickness="0"
                              UseAeroCaptionButtons="True"
                                      />
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="Margin" Value="5"/>
                                </Trigger>
                                <Trigger Property="WindowState" Value="Normal">
                                    <Setter Property="BorderBrush" Value="#FF36888A"/>
                                    <Setter Property="BorderThickness" Value="1"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <SolidColorBrush x:Key="VSBorderBrushColor" Color="#3d3d3d" Opacity="1"/>

            <Style x:Key="HeaderButtonStyle" TargetType="Button">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border Padding="10,8"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                                <ContentPresenter/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background">
                                        <Setter.Value>
                                            <SolidColorBrush Color="DarkGray" Opacity="0.3"/>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="BorderBrush">
                                        <Setter.Value>
                                            <SolidColorBrush Color="DarkGray" Opacity="0.5"/>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Background">
                                        <Setter.Value>
                                            <SolidColorBrush Color="DarkGray" Opacity="0.4"/>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="BorderBrush">
                                        <Setter.Value>
                                            <SolidColorBrush Color="DarkGray" Opacity="0.5"/>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="SubHeaderButtonStyle" TargetType="Button">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="ToolTipService.VerticalOffset" Value="5"/>
                <Setter Property="ToolTipService.InitialShowDelay" Value="0"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border 
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                                <ContentPresenter/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="BorderBrush">
                                        <Setter.Value>
                                            <SolidColorBrush Color="Gray" Opacity="0.3"/>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="Background">
                                        <Setter.Value>
                                            <SolidColorBrush Color="DarkGray" Opacity="0.4"/>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>

                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Background">
                                        <Setter.Value>
                                            <SolidColorBrush Color="Black" Opacity="0.3"/>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="BorderBrush">
                                        <Setter.Value>
                                            <SolidColorBrush Color="GhostWhite" Opacity="0.5"/>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="{x:Type TextBox}">
                <Setter Property="Margin" Value="0,5"/>
                
                <Setter Property="OverridesDefaultStyle" Value="True"/>
                <Setter Property="SnapsToDevicePixels" Value="True"/>
                <Setter Property="Background">
                    <Setter.Value>
                        <SolidColorBrush Color="#5f5f5f" Opacity="0.4"/>
                    </Setter.Value>
                </Setter>
                <Setter Property="BorderBrush" >
                    <Setter.Value>
                        <SolidColorBrush Color="Transparent" Opacity="0.7"/>
                    </Setter.Value>
                </Setter>
                <Setter Property="BorderThickness" Value="0.8"/>
                <Setter Property="MinHeight" Value="20"/>
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="CaretBrush" Value="White"/>
                <Setter Property="HorizontalAlignment" Value="Left"/>
                <Setter Property="MinWidth" Value="180"/>
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="FontFamily" Value="JetBrains Mono"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TextBoxBase}">
                            <Border RenderOptions.EdgeMode="Aliased" Padding="1" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}">
                                <ScrollViewer x:Name="PART_ContentHost" VerticalScrollBarVisibility="Hidden"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsFocused" Value="True">
                                    <Setter Property="Background">
                                        <Setter.Value>
                                            <SolidColorBrush Color="Black" Opacity="0.3"/>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="BorderBrush" >
                                        <Setter.Value>
                                            <SolidColorBrush Color="White" Opacity="0.7"/>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="PropertiesButtonStyle" TargetType="Button">
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border Background="Transparent">
                                <ContentPresenter/>
                            </Border>                            
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <EventTrigger RoutedEvent="Click">
                        <EventTrigger.Actions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="ContextMenu.IsOpen">
                                        <DiscreteBooleanKeyFrame KeyTime="0" Value="True"/>
                                    </BooleanAnimationUsingKeyFrames>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger.Actions>
                    </EventTrigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="HintTextBox" TargetType="TextBox">
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="CaretBrush" Value="White"/>
                <Setter Property="Background" Value="{StaticResource VSBorderBrushColor}"/>
                <Setter Property="BorderThickness" Value="1.2"/>
                <Setter Property="BorderBrush" Value="{StaticResource VSBorderBrushColor}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TextBox}">
                            <Border RenderOptions.EdgeMode="Aliased" Padding="1,2" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                                <Grid>
                                    <TextBlock Margin="2,0,0,0" Visibility="Hidden" x:Name="BackText" FontSize="{TemplateBinding FontSize}" Text="{Binding Path=(mat:HintAssist.Hint),RelativeSource={RelativeSource Self}}" >
                                        <TextBlock.Foreground>
                                            <SolidColorBrush Color="LightGray"/>
                                        </TextBlock.Foreground>
                                    </TextBlock>
                                    <ScrollViewer x:Name="PART_ContentHost" VerticalScrollBarVisibility="Disabled"/>
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsFocused" Value="False"/>
                                        <Condition Property="Text" Value=""/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Background" Value="{StaticResource VSBorderBrushColor}"/>
                                    <Setter Property="BorderBrush" Value="{StaticResource VSBorderBrushColor}"/>

                                    <Setter Property="Visibility" TargetName="BackText" Value="Visible"/>
                                </MultiTrigger>

                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="{StaticResource CommonColor}"/>
                                    <Setter Property="BorderBrush">
                                        <Setter.Value>
                                            <SolidColorBrush Color="White" Opacity="0.5"/>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>



            <LinearGradientBrush x:Key="MenuPopupBrush"
                     EndPoint="0.5,1"
                     StartPoint="0.5,0">
                <GradientStop Color="{DynamicResource ControlLightColor}"
                Offset="0" />
                <GradientStop Color="{DynamicResource ControlMediumColor}"
                Offset="0.5" />
                <GradientStop Color="{DynamicResource ControlLightColor}"
                Offset="1" />
            </LinearGradientBrush>

            <LinearGradientBrush x:Key="ProgressBarIndicatorAnimatedFill"
                     StartPoint="0,0"
                     EndPoint="1,0">
                <LinearGradientBrush.GradientStops>
                    <GradientStopCollection>
                        <GradientStop Color="#000000FF"
                    Offset="0" />
                        <GradientStop Color="#600000FF"
                    Offset="0.4" />
                        <GradientStop Color="#600000FF"
                    Offset="0.6" />
                        <GradientStop Color="#000000FF"
                    Offset="1" />
                    </GradientStopCollection>
                </LinearGradientBrush.GradientStops>
            </LinearGradientBrush>






            <!-- TopLevelHeader -->
            <ControlTemplate x:Key="MenuItemTopLevelHeaderTemplate"
                 TargetType="{x:Type MenuItem}">
                <Grid>
                    <Border>

                    </Border>

                </Grid>

            </ControlTemplate>

            <!-- TopLevelItem -->
            <ControlTemplate x:Key="TopLevelItemTemplate"
                 TargetType="{x:Type MenuItem}">

            </ControlTemplate>

            <!-- SubmenuItem -->
            <ControlTemplate x:Key="SubmenuItemTemplate"
                 TargetType="{x:Type MenuItem}">

            </ControlTemplate>

            <ControlTemplate x:Key="SubmenuHeaderTemplate"
                 TargetType="{x:Type MenuItem}">

            </ControlTemplate>


            <ControlTemplate x:Key="ComboBoxTextBox"
                 TargetType="{x:Type TextBox}">
                <Border x:Name="PART_ContentHost"
          Focusable="False"
          Background="{TemplateBinding Background}" />
            </ControlTemplate>

            <Style TargetType="ComboBox" x:Key="VSComboBoxStyle">
                <Setter Property="Background" Value="{StaticResource VSBorderBrushColor}"/>
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="SnapsToDevicePixels" Value="True"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ComboBox}">
                            <Grid >
                                <Border x:Name="Root" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0.7">
                                    <Grid>
                                        <ContentPresenter Content="{TemplateBinding SelectionBoxItem}"
                                                                ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                                                ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"                                                                
                                                              VerticalAlignment="Center"
                                                          Margin="2"/>
                                        <ToggleButton x:Name="Arrow"
                                                      Grid.Column="2"
                                                      Background="Transparent"
                                                      Focusable="false"
                                                      IsChecked="{Binding IsDropDownOpen, Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                                                      ClickMode="Press"/>
                                    </Grid>
                                </Border>
                                <Popup Placement="Bottom"
                                       VerticalOffset="-0.7"
                                       PlacementTarget="{Binding ElementName=Root}"
                                       Focusable="False"
                                       IsOpen="{TemplateBinding IsDropDownOpen}"
                                       AllowsTransparency="True">
                                    <Grid x:Name="DropDown"
                                          SnapsToDevicePixels="True"
                                          MinWidth="{TemplateBinding ActualWidth}"
                                          MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                        <Border x:Name="DropDownBorder"
                                                BorderThickness="0.7,0,0.7,0.7"
                                                BorderBrush="White"
                                                Background="{StaticResource CommonColor}">
                                            <ScrollViewer Margin="1"                                                      >
                                                <StackPanel IsItemsHost="True"
                                                        KeyboardNavigation.DirectionalNavigation="Contained" />
                                            </ScrollViewer>
                                        </Border>
                                    </Grid>
                                </Popup>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="{StaticResource CommonColor}"/>
                                    <Setter Property="BorderBrush" Value="White"/>
                                    <Setter Property="Foreground" TargetName="Arrow" Value="White"/>
                                </Trigger>
                                <Trigger Property="IsDropDownOpen" Value="True">
                                    <Setter Property="Background" Value="{StaticResource CommonColor}"/>
                                    <Setter Property="BorderBrush" Value="White"/>
                                    <Setter Property="Foreground" TargetName="Arrow" Value="White"/>
                                    <Setter Property="BorderThickness" TargetName="Root" Value="0.7,0.7,0.7,0"/>
                                    <Setter Property="Margin" TargetName="Root" Value="0,0,0,0.7"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>

                <Setter Property="ItemContainerStyle">
                    <Setter.Value>
                        <Style TargetType="{x:Type ComboBoxItem}">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                                        <Border Background="{TemplateBinding Background}" Padding="2" Margin="0,1">
                                            <ContentPresenter/>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Background">
                                                    <Setter.Value>
                                                        <SolidColorBrush Color="LightGray" Opacity="0.2"/>
                                                    </Setter.Value>
                                                </Setter>
                                            </Trigger>
                                            <Trigger Property="IsSelected" Value="True">
                                                <Setter Property="Background">
                                                    <Setter.Value>
                                                        <SolidColorBrush Color="LightGray" Opacity="0.4"/>
                                                    </Setter.Value>
                                                </Setter>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="{x:Type ToggleButton}">
                <Setter Property="Foreground" Value="Gray"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="20"/>
                                </Grid.ColumnDefinitions>
                                <Border Background="Transparent" BorderThickness="0.7" Grid.ColumnSpan="2"/>
                                <Border Grid.Column="0" BorderThickness="0.7" Background="Transparent"/>
                                <mat:PackIcon 
                                    Grid.Column="1"
                                    VerticalAlignment="Stretch" 
                                    HorizontalAlignment="Stretch" 
                                    Kind="ArrowDropDown" 
                                    Foreground="{TemplateBinding Foreground}"/>
                            </Grid>

                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>


            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Light.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Dark.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Primary/MaterialDesignColor.DeepPurple.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignExtensions;component/Themes/Generic.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignExtensions;component/Themes/MaterialDesignLightTheme.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignExtensions;component/Themes/MaterialDesignDarkTheme.xaml" />

                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Accent/MaterialDesignColor.Lime.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Application.Resources>
</Application>
